// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TaskManagement.API.Data;

#nullable disable

namespace TaskManagement.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250830101954_Seed-Task-List")]
    partial class SeedTaskList
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator().HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TaskManagement.API.Models.ProjectTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProjectTasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Прежде напрямую участниками.",
                            Status = "Cancelled",
                            Title = "Используйте свободно-распростроняемый XSS парсер, для того чтобы квантифицировать свободно-распростроняемый парсер!"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Же требует опыт.",
                            Status = "Planned",
                            Title = "Чтобы ввести ограничитель, мы можем получить ЭВМ ограничитель через 1080-пиксельный ЭВМ ограничитель!"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Концепция сознания различных информационно-пропогандистское не.",
                            Status = "Review",
                            Title = "Чтобы импортировать кортеж, мы можем получить ОС кортеж через свободно-распростроняемый ОС кортеж!"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Образом значимость повседневной вызывает также.",
                            Status = "Planned",
                            Title = "Я планирую разобрать твердотельный FTP кортеж, это должно помочь разобрать FTP кортеж!"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Соответствующих задач принимаемых.",
                            Status = "InProgress",
                            Title = "Попробуйте импортировать ПЗУ конденсатор, возможно это позволит импортировать мобильный конденсатор!"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Процесс создаёт с модель.",
                            Status = "Planned",
                            Title = "HTTP массив недоступен, требуется экспортировать вспомогательный массив, чтобы мы могли экспортировать HTTP массив!"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Систему управление сложившаяся.",
                            Status = "Review",
                            Title = "Попробуйте генерировать PCI объект, возможно это позволит генерировать излишний объект!"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Потребностям настолько внедрения высшего.",
                            Status = "Cancelled",
                            Title = "ЭВМ кортеж недоступен, требуется зашифровать онлайн кортеж, чтобы мы могли зашифровать ЭВМ кортеж!"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Обуславливает повышение разнообразный сфера этих.",
                            Status = "Planned",
                            Title = "Я планирую передать оптический ХЗ блок разведения, это должно помочь передать ХЗ блок разведения!"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Эксперимент от плановых деятельности изменений.",
                            Status = "OnHold",
                            Title = "Попробуйте обойти SMTP конденсатор, возможно это позволит обойти кросс-платформенный конденсатор!"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Намеченных богатый напрямую.",
                            Status = "Rejected",
                            Title = "Чтобы сохранить микрочип, мы можем получить SDD микрочип через сенсорный SDD микрочип!"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Понимание задача представляет плановых.",
                            Status = "Done",
                            Title = "Используйте твердотельный PNG механизм сигнализации, для того чтобы сохранить твердотельный механизм сигнализации!"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Значение порядка вызывает.",
                            Status = "Planned",
                            Title = "Чтобы ввести механизм сигнализации, мы можем получить XSS механизм сигнализации через беспроводной XSS механизм сигнализации!"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Структуры играет всего.",
                            Status = "Cancelled",
                            Title = "Необходимо перезагрузить цифровой HTTP брандмауэр!"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Создаёт позиции уточнения.",
                            Status = "OnHold",
                            Title = "Попробуйте разобрать FTP объект, возможно это позволит разобрать мобильный объект!"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Мира сомнений создание требует.",
                            Status = "Cancelled",
                            Title = "соединение не работает, попробуйте ввести кросс-платформенный USB код!"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Правительством не нашей форм повседневная.",
                            Status = "Testing",
                            Title = "Вы не можете импортировать винчестер, требуется шифрование или шифрование!"
                        },
                        new
                        {
                            Id = 18,
                            Description = "Очевидна внедрения не.",
                            Status = "InProgress",
                            Title = "Чтобы копировать парсер, мы можем получить EXE парсер через онлайн EXE парсер!"
                        },
                        new
                        {
                            Id = 19,
                            Description = "Экономической повышению участия материально-технической.",
                            Status = "Planned",
                            Title = "генерация не работает, попробуйте экспортировать цифровой XSS парсер!"
                        },
                        new
                        {
                            Id = 20,
                            Description = "Задача кадров прогрессивного.",
                            Status = "Rejected",
                            Title = "Используйте онлайн ПЗУ ограничитель, для того чтобы запрограммировать онлайн ограничитель!"
                        },
                        new
                        {
                            Id = 21,
                            Description = "Намеченных качества повседневная модели направлений.",
                            Status = "Rejected",
                            Title = "Необходимо распарсить онлайн FTP ключ!"
                        },
                        new
                        {
                            Id = 22,
                            Description = "Поэтапного таким материально-технической от.",
                            Status = "Planned",
                            Title = "Необходимо синтезировать онлайн НМЖД пиксель!"
                        },
                        new
                        {
                            Id = 23,
                            Description = "Соответствующей социально-ориентированный значение определения.",
                            Status = "Rejected",
                            Title = "Попробуйте синтезировать USB протокол, возможно это позволит синтезировать кросс-платформенный протокол!"
                        },
                        new
                        {
                            Id = 24,
                            Description = "Задача подготовке показывает всего.",
                            Status = "Testing",
                            Title = "копирование не работает, попробуйте передать сенсорный БИОС сокет!"
                        },
                        new
                        {
                            Id = 25,
                            Description = "Начало формированию структура структуры.",
                            Status = "Planned",
                            Title = "Используйте излишний ЭВМ брандмауэр, для того чтобы индексировать излишний брандмауэр!"
                        },
                        new
                        {
                            Id = 26,
                            Description = "Анализа информационно-пропогандистское влечёт настолько принимаемых.",
                            Status = "InProgress",
                            Title = "Я планирую импортировать цифровой Гб кортеж, это должно помочь импортировать Гб кортеж!"
                        },
                        new
                        {
                            Id = 27,
                            Description = "Гражданского богатый новых отметить.",
                            Status = "OnHold",
                            Title = "JSON протокол недоступен, требуется взломать 1080-пиксельный протокол, чтобы мы могли взломать JSON протокол!"
                        },
                        new
                        {
                            Id = 28,
                            Description = "Последовательного оценить постоянный рост прежде.",
                            Status = "Cancelled",
                            Title = "Чтобы синтезировать брандмауэр, мы можем получить SMTP брандмауэр через сенсорный SMTP брандмауэр!"
                        },
                        new
                        {
                            Id = 29,
                            Description = "Равным широким прежде от сфера.",
                            Status = "Done",
                            Title = "Чтобы взломать микрочип, мы можем получить FTP микрочип через 1080-пиксельный FTP микрочип!"
                        },
                        new
                        {
                            Id = 30,
                            Description = "Гражданского направлений сомнений.",
                            Status = "OnHold",
                            Title = "Используйте кросс-платформенный COM протокол, для того чтобы вычислить кросс-платформенный протокол!"
                        },
                        new
                        {
                            Id = 31,
                            Description = "Же забывать оценить модернизации.",
                            Status = "Testing",
                            Title = "Необходимо копировать цифровой ПЗУ конденсатор!"
                        },
                        new
                        {
                            Id = 32,
                            Description = "Модели предложений условий гражданского сознания.",
                            Status = "Done",
                            Title = "Чтобы распарсить винчестер, мы можем получить CSS винчестер через оптический CSS винчестер!"
                        },
                        new
                        {
                            Id = 33,
                            Description = "Оценить уточнения постоянное таким.",
                            Status = "Rejected",
                            Title = "Попробуйте генерировать Гб протокол, возможно это позволит генерировать онлайн протокол!"
                        },
                        new
                        {
                            Id = 34,
                            Description = "Дальнейшее значимость богатый.",
                            Status = "Review",
                            Title = "Необходимо вычислить кросс-платформенный COM монитор!"
                        },
                        new
                        {
                            Id = 35,
                            Description = "Различных задания обеспечивает значение.",
                            Status = "Rejected",
                            Title = "Используйте твердотельный PCI интерфейс, для того чтобы распарсить твердотельный интерфейс!"
                        },
                        new
                        {
                            Id = 36,
                            Description = "Административных целесообразности начало требует важные.",
                            Status = "Planned",
                            Title = "Попробуйте взломать ОЗУ массив, возможно это позволит взломать внутренний массив!"
                        },
                        new
                        {
                            Id = 37,
                            Description = "Занимаемых воздействия анализа.",
                            Status = "Review",
                            Title = "соединение не работает, попробуйте разобрать онлайн SSL кортеж!"
                        },
                        new
                        {
                            Id = 38,
                            Description = "Постоянное предпосылки участниками технологий.",
                            Status = "OnHold",
                            Title = "Чтобы передать интерфейс, мы можем получить ADP интерфейс через внутренний ADP интерфейс!"
                        },
                        new
                        {
                            Id = 39,
                            Description = "Модель сомнений этих этих актуальность.",
                            Status = "Review",
                            Title = "Чтобы синтезировать механизм сигнализации, мы можем получить ЭВМ механизм сигнализации через кросс-платформенный ЭВМ механизм сигнализации!"
                        },
                        new
                        {
                            Id = 40,
                            Description = "Ресурсосберегающих шагов обеспечение инновационный.",
                            Status = "Planned",
                            Title = "Я планирую переопределить излишний AGP винчестер, это должно помочь переопределить AGP винчестер!"
                        },
                        new
                        {
                            Id = 41,
                            Description = "Создаёт организации организационной влечёт.",
                            Status = "Cancelled",
                            Title = "обход не работает, попробуйте разобрать онлайн ОС код!"
                        },
                        new
                        {
                            Id = 42,
                            Description = "Административных и анализа показывает.",
                            Status = "OnHold",
                            Title = "Используйте свободно-распростроняемый ПО кортеж, для того чтобы распарсить свободно-распростроняемый кортеж!"
                        },
                        new
                        {
                            Id = 43,
                            Description = "Представляет широкому сомнений.",
                            Status = "Planned",
                            Title = "Вы не можете разобрать брандмауэр, требуется программирование или программирование!"
                        },
                        new
                        {
                            Id = 44,
                            Description = "Также нас активности.",
                            Status = "Review",
                            Title = "ОС сокет недоступен, требуется индексировать сенсорный сокет, чтобы мы могли индексировать ОС сокет!"
                        },
                        new
                        {
                            Id = 45,
                            Description = "Отношении насущным отметить укрепления от.",
                            Status = "Cancelled",
                            Title = "Чтобы перезагрузить интерфейс, мы можем получить EXE интерфейс через виртуальный EXE интерфейс!"
                        },
                        new
                        {
                            Id = 46,
                            Description = "Консультация кадровой рост.",
                            Status = "InProgress",
                            Title = "Чтобы вычислить кортеж, мы можем получить PNG кортеж через цифровой PNG кортеж!"
                        },
                        new
                        {
                            Id = 47,
                            Description = "Обеспечивает высшего с.",
                            Status = "Rejected",
                            Title = "Используйте внутренний XSS парсер, для того чтобы передать внутренний парсер!"
                        },
                        new
                        {
                            Id = 48,
                            Description = "Другой создаёт однако по национальный.",
                            Status = "OnHold",
                            Title = "Попробуйте запрограммировать ЭВМ кортеж, возможно это позволит запрограммировать мобильный кортеж!"
                        },
                        new
                        {
                            Id = 49,
                            Description = "Разнообразный модель модернизации играет таким.",
                            Status = "Cancelled",
                            Title = "Используйте внутренний Гб конденсатор, для того чтобы ввести внутренний конденсатор!"
                        },
                        new
                        {
                            Id = 50,
                            Description = "Важные ресурсосберегающих образом демократической кадровой.",
                            Status = "Testing",
                            Title = "Вы не можете ввести массив, требуется навигация или навигация!"
                        });
                });

            modelBuilder.Entity("TaskManagement.API.Models.AppUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("AppUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
